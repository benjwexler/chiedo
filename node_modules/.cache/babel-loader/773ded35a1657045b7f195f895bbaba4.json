{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'; // import rootReducer from './reducers/index';\n\nimport fetch from \"isomorphic-unfetch\"; // Note: this API requires redux@>=3.1.0\n// const store = createStore(\n//   rootReducer,\n//   applyMiddleware(thunk)\n// )\n\nvar initialState = {\n  data: undefined\n};\nexport var actionTypes = {\n  FETCH: 'FETCH'\n};\nexport function itemsFetchDataSuccess(data) {\n  return {\n    type: 'ITEMS_FETCH_DATA_SUCCESS',\n    data: data\n  };\n}\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ITEMS_FETCH_DATA_SUCCESS':\n      console.log(\"wow\");\n      console.log(action.data); // return {}\n      // return action.data\n\n      return _Object$assign({}, state, {\n        data: 27\n      });\n\n    default:\n      return state;\n  }\n};\nexport function fetchData(url) {\n  console.log(\"blah\");\n  return function (dispatch) {\n    var caseStudiesRes = fetch(url).then(function (data) {\n      return data.json();\n    }).then(function (data) {\n      dispatch(itemsFetchDataSuccess({\n        type: 'ITEMS_FETCH_DATA_SUCCESS',\n        data: data\n      }));\n    }); // const caseStudies = await caseStudiesRes.json();\n    // return caseStudiess\n    // dispatch(itemsFetchDataSuccess({ type: 'ITEMS_FETCH_DATA_SUCCESS', caseStudies }))\n    // return {}\n    // console.log(caseStudies)\n    // fetch(\n    //   \"https://beta.chiedo.com/wp-json/wp/v2/case-studies?_embed\"\n    // ).then(data => {\n    //   console.log(\"wtf\")\n    //   console.log(data)\n    //   return data \n    //   dispatch(itemsFetchDataSuccess({ type: 'ITEMS_FETCH_DATA_SUCCESS', data }))\n    // })\n  };\n}\nexport default function configureStore(initialState) {\n  return createStore(reducer, initialState, applyMiddleware(thunk));\n}","map":{"version":3,"sources":["/Users/bwexler/Desktop/WDF/chiedoLabs/redux/store.js"],"names":["createStore","applyMiddleware","thunk","fetch","initialState","data","undefined","actionTypes","FETCH","itemsFetchDataSuccess","type","reducer","state","action","console","log","fetchData","url","dispatch","caseStudiesRes","then","json","configureStore"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AACA;AACA;AAEA;;AAGE,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAEC;AADa,CAArB;AAIA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,KAAK,EAAE;AADkB,CAApB;AAIP,OAAO,SAASC,qBAAT,CAA+BJ,IAA/B,EAAqC;AAC1C,SAAO;AACHK,IAAAA,IAAI,EAAE,0BADH;AAEHL,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH;AAEC,OAAO,IAAMM,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACvD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAK,0BAAL;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACR,IAAnB,EAHA,CAIA;AACA;;AAEE,aAAO,eAAc,EAAd,EAAkBO,KAAlB,EAAyB;AAC9BP,QAAAA,IAAI,EAAE;AADwB,OAAzB,CAAP;;AAGF;AACE,aAAOO,KAAP;AAZJ;AAcD,CAfM;AAiBP,OAAO,SAASI,SAAT,CAAoBC,GAApB,EAA0B;AAE/BH,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEA,SAAO,UAACG,QAAD,EAAc;AAEnB,QAAMC,cAAc,GAAGhB,KAAK,CACxBc,GADwB,CAAL,CAEnBG,IAFmB,CAEd,UAAAf,IAAI,EAAI;AACb,aAAOA,IAAI,CAACgB,IAAL,EAAP;AACD,KAJoB,EAIlBD,IAJkB,CAIb,UAAAf,IAAI,EAAI;AACda,MAAAA,QAAQ,CAACT,qBAAqB,CAAC;AAAEC,QAAAA,IAAI,EAAE,0BAAR;AAAoCL,QAAAA,IAAI,EAAJA;AAApC,OAAD,CAAtB,CAAR;AACD,KANoB,CAAvB,CAFmB,CAUjB;AAEA;AAEA;AAEA;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GA5BC;AA6BD;AAED,eAAe,SAASiB,cAAT,CAAwBlB,YAAxB,EAAsC;AACnD,SAAOJ,WAAW,CACdW,OADc,EAEdP,YAFc,EAGdH,eAAe,CAACC,KAAD,CAHD,CAAlB;AAKH","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n// import rootReducer from './reducers/index';\nimport fetch from \"isomorphic-unfetch\";\n\n// Note: this API requires redux@>=3.1.0\n// const store = createStore(\n//   rootReducer,\n//   applyMiddleware(thunk)\n\n// )\n\n  \n  const initialState = {\n    data: undefined \n  }\n  \n  export const actionTypes = {\n    FETCH: 'FETCH',\n  }\n\n  export function itemsFetchDataSuccess(data) {\n    return {\n        type: 'ITEMS_FETCH_DATA_SUCCESS',\n        data: data,\n    };\n}\n\n  export const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'ITEMS_FETCH_DATA_SUCCESS':\n\n      console.log(\"wow\")\n      console.log(action.data)\n      // return {}\n      // return action.data\n\n        return Object.assign({}, state, {\n          data: 27\n        })\n      default:\n        return state\n    } \n  }\n\n  export function fetchData (url)  {\n\n    console.log(\"blah\")\n\n    return (dispatch) => {\n\n      const caseStudiesRes = fetch(\n          url\n        ).then(data => {\n          return data.json()\n        }).then(data => {\n          dispatch(itemsFetchDataSuccess({ type: 'ITEMS_FETCH_DATA_SUCCESS', data }))\n        })\n        \n        // const caseStudies = await caseStudiesRes.json();\n\n        // return caseStudiess\n\n        // dispatch(itemsFetchDataSuccess({ type: 'ITEMS_FETCH_DATA_SUCCESS', caseStudies }))\n\n        // return {}\n\n        // console.log(caseStudies)\n      // fetch(\n      //   \"https://beta.chiedo.com/wp-json/wp/v2/case-studies?_embed\"\n      // ).then(data => {\n      //   console.log(\"wtf\")\n      //   console.log(data)\n      //   return data \n      //   dispatch(itemsFetchDataSuccess({ type: 'ITEMS_FETCH_DATA_SUCCESS', data }))\n      // })\n    \n  };\n  }\n\n  export default function configureStore(initialState) {\n    return createStore(\n        reducer,\n        initialState,\n        applyMiddleware(thunk)\n    );\n}\n  "]},"metadata":{},"sourceType":"module"}